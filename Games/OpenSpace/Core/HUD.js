// Generated by CoffeeScript 1.12.1
(function() {
  var Bar, BatteryBar, MotherShipHealthBar, PlayerHealthBar, exports,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  exports = this;

  exports.HUD = (function() {
    function HUD(game1) {
      this.game = game1;
      this.scoreText = new Torch.Text(this.game, 20, 20, {
        text: "000",
        fontSize: 28,
        font: "main-font",
        color: "white"
      });
      this.battery = new BatteryBar(this.game);
      this.playerHealth = new PlayerHealthBar(this.game);
      this.mothershipHealth = new MotherShipHealthBar(this.game);
      this.playerHealth.bar.position.y = 175;
      this.mothershipHealth.bar.position.y = 250;
    }

    HUD.Load = function(game) {
      game.Load.Texture("Assets/Art/battery.png", "battery");
      game.Load.Texture("Assets/Art/cross.png", "player-health");
      return game.Load.Texture("Assets/Art/circle.png", "mothership-health");
    };

    return HUD;

  })();

  Bar = (function() {
    Bar.prototype.fullBatteryWidth = 300;

    Bar.prototype.charge = 100;

    Bar.prototype.maxCharge = 100;

    Bar.prototype.iconTextureId = "";

    function Bar(game) {
      this.game = game;
      this.bar = new Torch.Shapes.Box(game, 20, 100, this.fullBatteryWidth, 50, "green", "green");
      this.icon = new Torch.Sprite(game, 0, 0);
      this.icon.Bind.Texture(this.iconTextureId);
      this.icon.Size.Scale(1, 1);
      this.icon.Grid.CenterVertical();
      this.icon.Grid.margin.left = 10;
      this.bar.Grid.Append(this.icon);
    }

    Bar.prototype.SetColor = function() {
      var percentCharge;
      percentCharge = (this.charge / this.maxCharge) * 100;
      if (percentCharge > 80) {
        this.bar.fillColor = this.bar.strokeColor = "green";
        return;
      }
      if (percentCharge <= 75) {
        this.bar.fillColor = this.bar.strokeColor = "yellow";
      }
      if (percentCharge <= 50) {
        this.bar.fillColor = this.bar.strokeColor = "orange";
      }
      if (percentCharge <= 25) {
        return this.bar.fillColor = this.bar.strokeColor = "red";
      }
    };

    Bar.prototype.Deplete = function(percentage) {
      var change;
      if (this.charge <= 0) {
        return;
      }
      this.charge -= percentage;
      change = this.fullBatteryWidth * (percentage / this.maxCharge);
      this.bar.width -= change;
      return this.SetColor();
    };

    Bar.prototype.ReCharge = function(amount) {
      var change;
      if (this.charge >= this.maxCharge) {
        return;
      }
      this.charge += amount;
      if (this.charge >= this.maxCharge) {
        this.charge = this.maxCharge;
      }
      change = this.fullBatteryWidth * (this.charge / this.maxCharge);
      this.SetColor();
      return this.game.Tweens.Tween(this.bar, 300, Torch.Easing.Smooth).To({
        width: change
      });
    };

    return Bar;

  })();

  BatteryBar = (function(superClass) {
    extend(BatteryBar, superClass);

    function BatteryBar() {
      return BatteryBar.__super__.constructor.apply(this, arguments);
    }

    BatteryBar.prototype.iconTextureId = "battery";

    return BatteryBar;

  })(Bar);

  PlayerHealthBar = (function(superClass) {
    extend(PlayerHealthBar, superClass);

    function PlayerHealthBar() {
      return PlayerHealthBar.__super__.constructor.apply(this, arguments);
    }

    PlayerHealthBar.prototype.iconTextureId = "player-health";

    return PlayerHealthBar;

  })(Bar);

  MotherShipHealthBar = (function(superClass) {
    extend(MotherShipHealthBar, superClass);

    function MotherShipHealthBar() {
      return MotherShipHealthBar.__super__.constructor.apply(this, arguments);
    }

    MotherShipHealthBar.prototype.iconTextureId = "mothership-health";

    return MotherShipHealthBar;

  })(Bar);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSFVELmpzIiwic291cmNlUm9vdCI6Ii4uXFwuLlxcLi4iLCJzb3VyY2VzIjpbIkdhbWVzXFxPcGVuU3BhY2VcXFNyY1xcSFVELmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQSxNQUFBLDhEQUFBO0lBQUE7OztFQUFBLE9BQUEsR0FBVTs7RUFDSixPQUFPLENBQUM7SUFDRyxhQUFDLEtBQUQ7TUFBQyxJQUFDLENBQUEsT0FBRDtNQUNWLElBQUMsQ0FBQSxTQUFELEdBQWlCLElBQUEsS0FBSyxDQUFDLElBQU4sQ0FBVyxJQUFDLENBQUEsSUFBWixFQUFrQixFQUFsQixFQUFzQixFQUF0QixFQUNiO1FBQUEsSUFBQSxFQUFNLEtBQU47UUFDQSxRQUFBLEVBQVUsRUFEVjtRQUVBLElBQUEsRUFBTSxXQUZOO1FBR0EsS0FBQSxFQUFPLE9BSFA7T0FEYTtNQU1qQixJQUFDLENBQUEsT0FBRCxHQUFlLElBQUEsVUFBQSxDQUFXLElBQUMsQ0FBQSxJQUFaO01BQ2YsSUFBQyxDQUFBLFlBQUQsR0FBb0IsSUFBQSxlQUFBLENBQWdCLElBQUMsQ0FBQSxJQUFqQjtNQUNwQixJQUFDLENBQUEsZ0JBQUQsR0FBd0IsSUFBQSxtQkFBQSxDQUFvQixJQUFDLENBQUEsSUFBckI7TUFFeEIsSUFBQyxDQUFBLFlBQVksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQTNCLEdBQStCO01BQy9CLElBQUMsQ0FBQSxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQS9CLEdBQW1DO0lBWjFCOztJQWNiLEdBQUMsQ0FBQSxJQUFELEdBQU8sU0FBQyxJQUFEO01BQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFWLENBQWtCLHdCQUFsQixFQUE0QyxTQUE1QztNQUNBLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBVixDQUFrQixzQkFBbEIsRUFBMEMsZUFBMUM7YUFDQSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQVYsQ0FBa0IsdUJBQWxCLEVBQTJDLG1CQUEz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QUFLLENBQUMsTUFBTSxDQUFDLE1BQTVDLENBQW9ELENBQUMsRUFBckQsQ0FBeUQ7UUFBQSxLQUFBLEVBQU8sTUFBUDtPQUF6RDtJQVhNOzs7Ozs7RUFhUjs7Ozs7Ozt5QkFDRixhQUFBLEdBQWU7Ozs7S0FETTs7RUFHbkI7Ozs7Ozs7OEJBQ0YsYUFBQSxHQUFlOzs7O0tBRFc7O0VBR3hCOzs7Ozs7O2tDQUNGLGFBQUEsR0FBZTs7OztLQURlO0FBakZsQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSB0aGlzXHJcbmNsYXNzIGV4cG9ydHMuSFVEXHJcbiAgICBjb25zdHJ1Y3RvcjogKEBnYW1lKSAtPlxyXG4gICAgICAgIEBzY29yZVRleHQgPSBuZXcgVG9yY2guVGV4dCBAZ2FtZSwgMjAsIDIwLFxyXG4gICAgICAgICAgICB0ZXh0OiBcIjAwMFwiXHJcbiAgICAgICAgICAgIGZvbnRTaXplOiAyOFxyXG4gICAgICAgICAgICBmb250OiBcIm1haW4tZm9udFwiXHJcbiAgICAgICAgICAgIGNvbG9yOiBcIndoaXRlXCJcclxuXHJcbiAgICAgICAgQGJhdHRlcnkgPSBuZXcgQmF0dGVyeUJhcihAZ2FtZSlcclxuICAgICAgICBAcGxheWVySGVhbHRoID0gbmV3IFBsYXllckhlYWx0aEJhcihAZ2FtZSlcclxuICAgICAgICBAbW90aGVyc2hpcEhlYWx0aCA9IG5ldyBNb3RoZXJTaGlwSGVhbHRoQmFyKEBnYW1lKVxyXG5cclxuICAgICAgICBAcGxheWVySGVhbHRoLmJhci5wb3NpdGlvbi55ID0gMTc1XHJcbiAgICAgICAgQG1vdGhlcnNoaXBIZWFsdGguYmFyLnBvc2l0aW9uLnkgPSAyNTBcclxuXHJcbiAgICBATG9hZDogKGdhbWUpIC0+XHJcbiAgICAgICAgZ2FtZS5Mb2FkLlRleHR1cmUoXCJBc3NldHMvQXJ0L2JhdHRlcnkucG5nXCIsIFwiYmF0dGVyeVwiKVxyXG4gICAgICAgIGdhbWUuTG9hZC5UZXh0dXJlKFwiQXNzZXRzL0FydC9jcm9zcy5wbmdcIiwgXCJwbGF5ZXItaGVhbHRoXCIpXHJcbiAgICAgICAgZ2FtZS5Mb2FkLlRleHR1cmUoXCJBc3NldHMvQXJ0L2NpcmNsZS5wbmdcIiwgXCJtb3RoZXJzaGlwLWhlYWx0aFwiKVxyXG5cclxuY2xhc3MgQmFyXHJcbiAgICBmdWxsQmF0dGVyeVdpZHRoOiAzMDBcclxuICAgIGNoYXJnZTogMTAwXHJcbiAgICBtYXhDaGFyZ2U6IDEwMFxyXG4gICAgaWNvblRleHR1cmVJZDogXCJcIlxyXG4gICAgY29uc3RydWN0b3I6IChnYW1lKSAtPlxyXG4gICAgICAgIEBnYW1lID0gZ2FtZVxyXG4gICAgICAgIEBiYXIgPSBuZXcgVG9yY2guU2hhcGVzLkJveChnYW1lLCAyMCwgMTAwLCBAZnVsbEJhdHRlcnlXaWR0aCwgNTAsIFwiZ3JlZW5cIiwgXCJncmVlblwiKVxyXG4gICAgICAgIEBpY29uID0gbmV3IFRvcmNoLlNwcml0ZShnYW1lLCAwLCAwKVxyXG4gICAgICAgIEBpY29uLkJpbmQuVGV4dHVyZShAaWNvblRleHR1cmVJZClcclxuICAgICAgICBAaWNvbi5TaXplLlNjYWxlKDEsMSlcclxuICAgICAgICBAaWNvbi5HcmlkLkNlbnRlclZlcnRpY2FsKClcclxuICAgICAgICBAaWNvbi5HcmlkLm1hcmdpbi5sZWZ0ID0gMTBcclxuXHJcbiAgICAgICAgQGJhci5HcmlkLkFwcGVuZChAaWNvbilcclxuXHJcbiAgICBTZXRDb2xvcjogLT5cclxuICAgICAgICBwZXJjZW50Q2hhcmdlID0gKEBjaGFyZ2UgLyBAbWF4Q2hhcmdlKSAqIDEwMFxyXG5cclxuICAgICAgICBpZiBwZXJjZW50Q2hhcmdlID4gODBcclxuICAgICAgICAgICAgQGJhci5maWxsQ29sb3IgPSBAYmFyLnN0cm9rZUNvbG9yID0gXCJncmVlblwiXHJcbiAgICAgICAgICAgIHJldHVyblxyXG5cclxuICAgICAgICBpZiBwZXJjZW50Q2hhcmdlIDw9IDc1XHJcbiAgICAgICAgICAgIEBiYXIuZmlsbENvbG9yID0gQGJhci5zdHJva2VDb2xvciA9IFwieWVsbG93XCJcclxuXHJcbiAgICAgICAgaWYgcGVyY2VudENoYXJnZSA8PSA1MFxyXG4gICAgICAgICAgICBAYmFyLmZpbGxDb2xvciA9IEBiYXIuc3Ryb2tlQ29sb3IgPSBcIm9yYW5nZVwiXHJcblxyXG4gICAgICAgIGlmIHBlcmNlbnRDaGFyZ2UgPD0gMjVcclxuICAgICAgICAgICAgQGJhci5maWxsQ29sb3IgPSBAYmFyLnN0cm9rZUNvbG9yID0gXCJyZWRcIlxyXG5cclxuICAgIERlcGxldGU6IChwZXJjZW50YWdlKSAtPlxyXG4gICAgICAgIHJldHVybiBpZiBAY2hhcmdlIDw9IDBcclxuICAgICAgICBAY2hhcmdlIC09IHBlcmNlbnRhZ2VcclxuXHJcbiAgICAgICAgY2hhbmdlID0gQGZ1bGxCYXR0ZXJ5V2lkdGggKiAoIHBlcmNlbnRhZ2UgLyBAbWF4Q2hhcmdlIClcclxuICAgICAgICBAYmFyLndpZHRoIC09IGNoYW5nZVxyXG5cclxuICAgICAgICBAU2V0Q29sb3IoKVxyXG5cclxuICAgIFJlQ2hhcmdlOiAoYW1vdW50KSAtPlxyXG4gICAgICAgIHJldHVybiBpZiBAY2hhcmdlID49IEBtYXhDaGFyZ2VcclxuXHJcbiAgICAgICAgQGNoYXJnZSArPSBhbW91bnRcclxuXHJcbiAgICAgICAgaWYgQGNoYXJnZSA+PSBAbWF4Q2hhcmdlXHJcbiAgICAgICAgICAgIEBjaGFyZ2UgPSBAbWF4Q2hhcmdlXHJcblxyXG4gICAgICAgIGNoYW5nZSA9IEBmdWxsQmF0dGVyeVdpZHRoICogKEBjaGFyZ2UgLyBAbWF4Q2hhcmdlKVxyXG4gICAgICAgIEBTZXRDb2xvcigpXHJcblxyXG4gICAgICAgIEBnYW1lLlR3ZWVucy5Ud2VlbiggQGJhciwgMzAwLCBUb3JjaC5FYXNpbmcuU21vb3RoICkuVG8oIHdpZHRoOiBjaGFuZ2UgKVxyXG5cclxuY2xhc3MgQmF0dGVyeUJhciBleHRlbmRzIEJhclxyXG4gICAgaWNvblRleHR1cmVJZDogXCJiYXR0ZXJ5XCJcclxuXHJcbmNsYXNzIFBsYXllckhlYWx0aEJhciBleHRlbmRzIEJhclxyXG4gICAgaWNvblRleHR1cmVJZDogXCJwbGF5ZXItaGVhbHRoXCJcclxuXHJcbmNsYXNzIE1vdGhlclNoaXBIZWFsdGhCYXIgZXh0ZW5kcyBCYXJcclxuICAgIGljb25UZXh0dXJlSWQ6IFwibW90aGVyc2hpcC1oZWFsdGhcIlxyXG4iXX0=
//# sourceURL=C:\dev\js\Torch.js\Games\OpenSpace\Src\HUD.coffee