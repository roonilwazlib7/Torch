// Generated by CoffeeScript 1.12.1
(function() {
  var exports,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  exports = this;

  exports.Projectile = (function(superClass) {
    extend(Projectile, superClass);

    Projectile.prototype.PROJECTILE = true;

    Projectile.prototype.velocity = 0.5;

    Projectile.prototype.flags = null;

    Projectile.prototype.forms = null;

    Projectile.prototype.shooter = null;

    Projectile.prototype.damage = 1;

    Projectile.prototype.textureName = "bullet-default";

    function Projectile(shooter, config) {
      var defaultConfig;
      if (config == null) {
        config = {};
      }
      this.shooter = shooter;
      defaultConfig = {
        x: shooter.position.x,
        y: shooter.position.y,
        direction: new Torch.Vector(0, 0),
        texture: this.textureName
      };
      Torch.Util.Object(defaultConfig).Extend(config);
      Projectile.__super__.constructor.call(this, shooter.game, defaultConfig.x, defaultConfig.y);
      this.flags = ["projectile"];
      this.Bind.Texture(defaultConfig.texture);
      this.Size.Scale(1, 1);
      this.Body.velocity.Set(defaultConfig.direction.x * this.velocity, defaultConfig.direction.y * this.velocity);
      this.rotation = shooter.rotation;
      this.SetUpCollisions();
    }

    Projectile.Load = function(game) {
      game.Load.Texture("Assets/Art/PNG/Lasers/laserBlue04.png", "bullet-default");
      game.Load.Texture("Assets/Art/PNG/Lasers/laserBlue09.png", "bullet-default-explode");
      game.Load.Texture("Assets/Art/PNG/Lasers/laserRed04.png", "bullet-shooter-enemy");
      return game.Load.Texture("Assets/Art/PNG/Lasers/laserRed09.png", "bullet-shooter-enemy-explode");
    };

    Projectile.prototype.Update = function() {
      Projectile.__super__.Update.call(this);
      if (!this.rectangle.Intersects(this.game.Camera.Viewport.rectangle)) {
        return this.Trash();
      }
    };

    Projectile.prototype.Kill = function() {
      this.emitter = this.game.Particles.ParticleEmitter(500, 0, 0, true, this.textureName + "-explode", {
        spread: 20,
        gravity: 0.0001,
        minAngle: 0,
        maxAngle: Math.PI * 2,
        minScale: 0.01,
        maxScale: 0.05,
        minVelocity: 0.01,
        maxVelocity: 0.01,
        minAlphaDecay: 400,
        maxAlphaDecay: 450,
        minOmega: 0.001,
        maxOmega: 0.001
      });
      this.emitter.auto = false;
      this.emitter.position = this.position.Clone();
      this.Trash();
      return this.emitter.EmitParticles(true);
    };

    Projectile.prototype.SetUpCollisions = function() {
      this.Collisions.Monitor();
      return this.On("Collision", (function(_this) {
        return function(event) {
          var obj;
          obj = event.collisionData.collider;
          if (!obj.NotSelf(_this.shooter) || obj.PROJECTILE) {
            return;
          }
          if (!(obj.PLAYER || obj.ENEMY || obj.MOTHERSHIP)) {
            return;
          }
          if (obj.MOTHERSHIP && _this.shooter.PLAYER) {
            return;
          }
          if (obj.Emit != null) {
            obj.Emit("Damaged", {
              damage: _this.damage
            });
          }
          return _this.Kill();
        };
      })(this));
    };

    return Projectile;

  })(Torch.Sprite);

  exports.ShooterEnemyProjectile = (function(superClass) {
    extend(ShooterEnemyProjectile, superClass);

    function ShooterEnemyProjectile() {
      return ShooterEnemyProjectile.__super__.constructor.apply(this, arguments);
    }

    ShooterEnemyProjectile.prototype.textureName = "bullet-shooter-enemy";

    return ShooterEnemyProjectile;

  })(exports.Projectile);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvamVjdGlsZS5qcyIsInNvdXJjZVJvb3QiOiIuLlxcLi5cXC4uIiwic291cmNlcyI6WyJHYW1lc1xcT3BlblNwYWNlXFxTcmNcXFByb2plY3RpbGUuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUFBLE1BQUEsT0FBQTtJQUFBOzs7RUFBQSxPQUFBLEdBQVU7O0VBQ0osT0FBTyxDQUFDOzs7eUJBQ1YsVUFBQSxHQUFZOzt5QkFDWixRQUFBLEdBQVU7O3lCQUNWLEtBQUEsR0FBTzs7eUJBQ1AsS0FBQSxHQUFPOzt5QkFDUCxPQUFBLEdBQVM7O3lCQUNULE1BQUEsR0FBUTs7eUJBQ1IsV0FBQSxHQUFhOztJQUNBLG9CQUFDLE9BQUQsRUFBVSxNQUFWO0FBQ1QsVUFBQTs7UUFEbUIsU0FBUzs7TUFDNUIsSUFBQyxDQUFBLE9BQUQsR0FBVztNQUNYLGFBQUEsR0FDSTtRQUFBLENBQUEsRUFBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQXBCO1FBQ0EsQ0FBQSxFQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FEcEI7UUFFQSxTQUFBLEVBQWUsSUFBQSxLQUFLLENBQUMsTUFBTixDQUFhLENBQWIsRUFBZSxDQUFmLENBRmY7UUFHQSxPQUFBLEVBQVMsSUFBQyxDQUFBLFdBSFY7O01BS0osS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFYLENBQW1CLGFBQW5CLENBQWtDLENBQUMsTUFBbkMsQ0FBMkMsTUFBM0M7TUFFQSw0Q0FBTyxPQUFPLENBQUMsSUFBZixFQUFxQixhQUFhLENBQUMsQ0FBbkMsRUFBc0MsYUFBYSxDQUFDLENBQXBEO01BRUEsSUFBQyxDQUFBLEtBQUQsR0FBUyxDQUFFLFlBQUY7TUFFVCxJQUFDLENBQUEsSUFBSSxDQUFDLE9BQU4sQ0FBYyxhQUFhLENBQUMsT0FBNUI7TUFDQSxJQUFDLENBQUEsSUFBSSxDQUFDLEtBQU4sQ0FBWSxDQUFaLEVBQWMsQ0FBZDtNQUVBLElBQUMsQ0FBQSxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQWYs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RmE7Ozs7S0E5RFksS0FBSyxDQUFDOztFQTRFakMsT0FBTyxDQUFDOzs7Ozs7O3FDQUNWLFdBQUEsR0FBYTs7OztLQUQ0QixPQUFPLENBQUM7QUE3RXJEIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IHRoaXNcclxuY2xhc3MgZXhwb3J0cy5Qcm9qZWN0aWxlIGV4dGVuZHMgVG9yY2guU3ByaXRlXHJcbiAgICBQUk9KRUNUSUxFOiB0cnVlXHJcbiAgICB2ZWxvY2l0eTogMC41XHJcbiAgICBmbGFnczogbnVsbFxyXG4gICAgZm9ybXM6IG51bGxcclxuICAgIHNob290ZXI6IG51bGxcclxuICAgIGRhbWFnZTogMVxyXG4gICAgdGV4dHVyZU5hbWU6IFwiYnVsbGV0LWRlZmF1bHRcIlxyXG4gICAgY29uc3RydWN0b3I6IChzaG9vdGVyLCBjb25maWcgPSB7fSkgLT5cclxuICAgICAgICBAc2hvb3RlciA9IHNob290ZXJcclxuICAgICAgICBkZWZhdWx0Q29uZmlnID1cclxuICAgICAgICAgICAgeDogc2hvb3Rlci5wb3NpdGlvbi54XHJcbiAgICAgICAgICAgIHk6IHNob290ZXIucG9zaXRpb24ueVxyXG4gICAgICAgICAgICBkaXJlY3Rpb246IG5ldyBUb3JjaC5WZWN0b3IoMCwwKVxyXG4gICAgICAgICAgICB0ZXh0dXJlOiBAdGV4dHVyZU5hbWVcclxuXHJcbiAgICAgICAgVG9yY2guVXRpbC5PYmplY3QoIGRlZmF1bHRDb25maWcgKS5FeHRlbmQoIGNvbmZpZyApXHJcblxyXG4gICAgICAgIHN1cGVyKCBzaG9vdGVyLmdhbWUsIGRlZmF1bHRDb25maWcueCwgZGVmYXVsdENvbmZpZy55IClcclxuXHJcbiAgICAgICAgQGZsYWdzID0gWyBcInByb2plY3RpbGVcIiBdXHJcblxyXG4gICAgICAgIEBCaW5kLlRleHR1cmUoZGVmYXVsdENvbmZpZy50ZXh0dXJlKVxyXG4gICAgICAgIEBTaXplLlNjYWxlKDEsMSlcclxuXHJcbiAgICAgICAgQEJvZHkudmVsb2NpdHkuU2V0KCBkZWZhdWx0Q29uZmlnLmRpcmVjdGlvbi54ICogQHZlbG9jaXR5LCBkZWZhdWx0Q29uZmlnLmRpcmVjdGlvbi55ICogQHZlbG9jaXR5IClcclxuXHJcbiAgICAgICAgQHJvdGF0aW9uID0gc2hvb3Rlci5yb3RhdGlvblxyXG5cclxuICAgICAgICBAU2V0VXBDb2xsaXNpb25zKClcclxuXHJcbiAgICBATG9hZDogKGdhbWUpIC0+XHJcbiAgICAgICAgZ2FtZS5Mb2FkLlRleHR1cmUoXCJBc3NldHMvQXJ0L1BORy9MYXNlcnMvbGFzZXJCbHVlMDQucG5nXCIsIFwiYnVsbGV0LWRlZmF1bHRcIilcclxuICAgICAgICBnYW1lLkxvYWQuVGV4dHVyZShcIkFzc2V0cy9BcnQvUE5HL0xhc2Vycy9sYXNlckJsdWUwOS5wbmdcIiwgXCJidWxsZXQtZGVmYXVsdC1leHBsb2RlXCIpXHJcblxyXG4gICAgICAgIGdhbWUuTG9hZC5UZXh0dXJlKFwiQXNzZXRzL0FydC9QTkcvTGFzZXJzL2xhc2VyUmVkMDQucG5nXCIsIFwiYnVsbGV0LXNob290ZXItZW5lbXlcIilcclxuICAgICAgICBnYW1lLkxvYWQuVGV4dHVyZShcIkFzc2V0cy9BcnQvUE5HL0xhc2Vycy9sYXNlclJlZDA5LnBuZ1wiLCBcImJ1bGxldC1zaG9vdGVyLWVuZW15LWV4cGxvZGVcIilcclxuXHJcbiAgICBVcGRhdGU6IC0+XHJcbiAgICAgICAgc3VwZXIoKVxyXG4gICAgICAgIGlmIG5vdCBAcmVjdGFuZ2xlLkludGVyc2VjdHMoIEBnYW1lLkNhbWVyYS5WaWV3cG9ydC5yZWN0YW5nbGUgKVxyXG4gICAgICAgICAgICBAVHJhc2goKVxyXG5cclxuICAgIEtpbGw6IC0+XHJcbiAgICAgICAgQGVtaXR0ZXIgPSBAZ2FtZS5QYXJ0aWNsZXMuUGFydGljbGVFbWl0dGVyIDUwMCwgMCwgMCwgdHJ1ZSwgQHRleHR1cmVOYW1lICsgXCItZXhwbG9kZVwiLFxyXG4gICAgICAgICAgICBzcHJlYWQ6IDIwXHJcbiAgICAgICAgICAgIGdyYXZpdHk6IDAuMDAwMVxyXG4gICAgICAgICAgICBtaW5BbmdsZTogMFxyXG4gICAgICAgICAgICBtYXhBbmdsZTogTWF0aC5QSSAqIDJcclxuICAgICAgICAgICAgbWluU2NhbGU6IDAuMDFcclxuICAgICAgICAgICAgbWF4U2NhbGU6IDAuMDVcclxuICAgICAgICAgICAgbWluVmVsb2NpdHk6IDAuMDFcclxuICAgICAgICAgICAgbWF4VmVsb2NpdHk6IDAuMDFcclxuICAgICAgICAgICAgbWluQWxwaGFEZWNheTogNDAwXHJcbiAgICAgICAgICAgIG1heEFscGhhRGVjYXk6IDQ1MFxyXG4gICAgICAgICAgICBtaW5PbWVnYTogMC4wMDFcclxuICAgICAgICAgICAgbWF4T21lZ2E6IDAuMDAxXHJcbiAgICAgICAgQGVtaXR0ZXIuYXV0byA9IGZhbHNlXHJcbiAgICAgICAgQGVtaXR0ZXIucG9zaXRpb24gPSBAcG9zaXRpb24uQ2xvbmUoKVxyXG4gICAgICAgIEBUcmFzaCgpXHJcbiAgICAgICAgQGVtaXR0ZXIuRW1pdFBhcnRpY2xlcyh0cnVlKVxyXG5cclxuICAgIFNldFVwQ29sbGlzaW9uczogLT5cclxuICAgICAgICBAQ29sbGlzaW9ucy5Nb25pdG9yKClcclxuICAgICAgICBAT24gXCJDb2xsaXNpb25cIiwgKGV2ZW50KSA9PlxyXG4gICAgICAgICAgICBvYmogPSBldmVudC5jb2xsaXNpb25EYXRhLmNvbGxpZGVyXHJcblxyXG4gICAgICAgICAgICByZXR1cm4gaWYgbm90IG9iai5Ob3RTZWxmKEBzaG9vdGVyKSBvciBvYmouUFJPSkVDVElMRVxyXG4gICAgICAgICAgICByZXR1cm4gaWYgbm90ICggb2JqLlBMQVlFUiBvciBvYmouRU5FTVkgb3Igb2JqLk1PVEhFUlNISVAgKVxyXG4gICAgICAgICAgICByZXR1cm4gaWYgKCBvYmouTU9USEVSU0hJUCAmJiBAc2hvb3Rlci5QTEFZRVIpXHJcblxyXG4gICAgICAgICAgICBpZiBvYmouRW1pdD9cclxuICAgICAgICAgICAgICAgIG9iai5FbWl0KCBcIkRhbWFnZWRcIiwgZGFtYWdlOkBkYW1hZ2UgKVxyXG5cclxuICAgICAgICAgICAgQEtpbGwoKVxyXG5cclxuY2xhc3MgZXhwb3J0cy5TaG9vdGVyRW5lbXlQcm9qZWN0aWxlIGV4dGVuZHMgZXhwb3J0cy5Qcm9qZWN0aWxlXHJcbiAgICB0ZXh0dXJlTmFtZTogXCJidWxsZXQtc2hvb3Rlci1lbmVteVwiXHJcbiJdfQ==
//# sourceURL=C:\dev\js\Torch.js\Games\OpenSpace\Src\Projectile.coffee